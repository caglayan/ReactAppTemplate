{"ast":null,"code":"import _slicedToArray from \"/Users/caglayanserbetci/Desktop/miuul/miuul/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/caglayanserbetci/Desktop/miuul/miuul/src/App.js\";\n\n/* \nTODO:\n* Change Name of SideBar \n* Add this side bar to Layout\n* Make logout function\n* Make login jsx\n\n\nFIXME:\n*/\nimport React from \"react\";\nimport \"./App.css\";\nimport { createMuiTheme, ThemeProvider, CssBaseline, Divider } from \"@material-ui/core\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport BodyArea from \"./Layout/BodyArea\";\nimport Header from \"./Layout/Header\";\nimport Footer from \"./Layout/Footer\";\nimport SideMenu from \"./Layout/SideMenu\";\nimport SnackBar from \"./Dialogs/SnackBar\";\nimport LoginSignupDialog from \"./Dialogs/LoginSignupDialog\";\nimport configureStore from \"./Redux/Store/configStore\";\nimport { startCreateUserLocal, startRemoveUserLocal } from \"./Redux/Selectors/userSelector\";\nconst store = configureStore();\nstore.subscribe(() => {\n  const state = store.getState();\n  console.log(state);\n});\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  },\n  typography: {\n    button: {\n      textTransform: \"none\"\n    }\n  }\n});\nexport default function App() {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        loginIsActive = _React$useState2[0],\n        setLoginIsActive = _React$useState2[1];\n\n  const _React$useState3 = React.useState(\"Login\"),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        dialogType = _React$useState4[0],\n        setDialogType = _React$useState4[1];\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        snackIsActive = _React$useState6[0],\n        setSnackIsActive = _React$useState6[1];\n\n  const _React$useState7 = React.useState(1),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        snackType = _React$useState8[0],\n        setSnackType = _React$useState8[1];\n\n  const _React$useState9 = React.useState(\"\"),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        snackMessage = _React$useState10[0],\n        setSnackMessage = _React$useState10[1];\n\n  const _React$useState11 = React.useState(false),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        sideMenuOpen = _React$useState12[0],\n        setSideMenuOpen = _React$useState12[1];\n\n  React.useEffect(() => {\n    startCreateUserLocal(store.dispatch) ? console.log(\"user logged in\") : console.log(\"user not logged in\");\n  }, []);\n\n  const logoutUser = () => {\n    console.log(\"user logout\");\n    startRemoveUserLocal(store.dispatch);\n  };\n\n  const handleClickLoginOpen = () => {\n    console.log(\"login button is clicked\");\n    setLoginIsActive(true);\n    setDialogType(\"Login\");\n  };\n\n  const handleClickSignupOpen = () => {\n    console.log(\"signup button is clicked\");\n    setLoginIsActive(true);\n    setDialogType(\"Signup\");\n  };\n\n  const handleCloseDialog = () => {\n    console.log(\"close dialog\");\n    setLoginIsActive(false);\n  };\n\n  const handleCloseSnack = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setSnackIsActive(false);\n  };\n\n  const handleDialogError = message => {\n    console.log(message);\n    setSnackType(2);\n    setSnackMessage(message);\n    setSnackIsActive(true);\n  };\n\n  const handleOpenSideMenu = () => {\n    setSideMenuOpen(true);\n  };\n\n  const handleCloseSideMenu = () => {\n    setSideMenuOpen(false);\n  };\n\n  const changeDialogType = type => {\n    setDialogType(type);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(ThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(Header, {\n    isUserLogin: false,\n    loginOpen: handleClickLoginOpen,\n    signupOpen: handleClickSignupOpen,\n    sideMenuOpen: handleOpenSideMenu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(BodyArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), React.createElement(LoginSignupDialog, {\n    closeDialog: handleCloseDialog,\n    isActive: loginIsActive,\n    type: dialogType,\n    onError: handleDialogError,\n    changeType: changeDialogType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), React.createElement(SnackBar, {\n    type: snackType,\n    message: snackMessage,\n    closeSnack: handleCloseSnack,\n    isActive: snackIsActive,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), React.createElement(SideMenu, {\n    isOpen: sideMenuOpen,\n    open: handleOpenSideMenu,\n    close: handleCloseSideMenu,\n    logoutUser: logoutUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["/Users/caglayanserbetci/Desktop/miuul/miuul/src/App.js"],"names":["React","createMuiTheme","ThemeProvider","CssBaseline","Divider","BrowserRouter","Provider","BodyArea","Header","Footer","SideMenu","SnackBar","LoginSignupDialog","configureStore","startCreateUserLocal","startRemoveUserLocal","store","subscribe","state","getState","console","log","theme","palette","type","typography","button","textTransform","App","useState","loginIsActive","setLoginIsActive","dialogType","setDialogType","snackIsActive","setSnackIsActive","snackType","setSnackType","snackMessage","setSnackMessage","sideMenuOpen","setSideMenuOpen","useEffect","dispatch","logoutUser","handleClickLoginOpen","handleClickSignupOpen","handleCloseDialog","handleCloseSnack","event","reason","handleDialogError","message","handleOpenSideMenu","handleCloseSideMenu","changeDialogType"],"mappings":"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","sourcesContent":["/* \nTODO:\n* Change Name of SideBar \n* Add this side bar to Layout\n* Make logout function\n* Make login jsx\n\n\nFIXME:\n*/\n\nimport React from \"react\";\nimport \"./App.css\";\nimport {\n  createMuiTheme,\n  ThemeProvider,\n  CssBaseline,\n  Divider\n} from \"@material-ui/core\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport BodyArea from \"./Layout/BodyArea\";\nimport Header from \"./Layout/Header\";\nimport Footer from \"./Layout/Footer\";\nimport SideMenu from \"./Layout/SideMenu\";\nimport SnackBar from \"./Dialogs/SnackBar\";\nimport LoginSignupDialog from \"./Dialogs/LoginSignupDialog\";\nimport configureStore from \"./Redux/Store/configStore\";\nimport {\n  startCreateUserLocal,\n  startRemoveUserLocal\n} from \"./Redux/Selectors/userSelector\";\n\nconst store = configureStore();\n\nstore.subscribe(() => {\n  const state = store.getState();\n  console.log(state);\n});\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  },\n  typography: {\n    button: {\n      textTransform: \"none\"\n    }\n  }\n});\n\nexport default function App() {\n  const [loginIsActive, setLoginIsActive] = React.useState(false);\n  const [dialogType, setDialogType] = React.useState(\"Login\");\n  const [snackIsActive, setSnackIsActive] = React.useState(false);\n  const [snackType, setSnackType] = React.useState(1);\n  const [snackMessage, setSnackMessage] = React.useState(\"\");\n  const [sideMenuOpen, setSideMenuOpen] = React.useState(false);\n\n  React.useEffect(() => {\n    startCreateUserLocal(store.dispatch)\n      ? console.log(\"user logged in\")\n      : console.log(\"user not logged in\");\n  }, []);\n\n  const logoutUser = () => {\n    console.log(\"user logout\");\n    startRemoveUserLocal(store.dispatch);\n  };\n\n  const handleClickLoginOpen = () => {\n    console.log(\"login button is clicked\");\n    setLoginIsActive(true);\n    setDialogType(\"Login\");\n  };\n\n  const handleClickSignupOpen = () => {\n    console.log(\"signup button is clicked\");\n    setLoginIsActive(true);\n    setDialogType(\"Signup\");\n  };\n\n  const handleCloseDialog = () => {\n    console.log(\"close dialog\");\n    setLoginIsActive(false);\n  };\n\n  const handleCloseSnack = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setSnackIsActive(false);\n  };\n\n  const handleDialogError = (message) => {\n    console.log(message);\n    setSnackType(2);\n    setSnackMessage(message);\n    setSnackIsActive(true);\n  };\n\n  const handleOpenSideMenu = () => {\n    setSideMenuOpen(true);\n  };\n  const handleCloseSideMenu = () => {\n    setSideMenuOpen(false);\n  };\n\n  const changeDialogType = (type) => {\n    setDialogType(type);\n  };\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Provider store={store}>\n          <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <Header\n              isUserLogin={false}\n              loginOpen={handleClickLoginOpen}\n              signupOpen={handleClickSignupOpen}\n              sideMenuOpen={handleOpenSideMenu}\n            />\n            <Divider />\n            <BodyArea />\n            <Footer />\n            <LoginSignupDialog\n              closeDialog={handleCloseDialog}\n              isActive={loginIsActive}\n              type={dialogType}\n              onError={handleDialogError}\n              changeType={changeDialogType}\n            />\n            <SnackBar\n              type={snackType}\n              message={snackMessage}\n              closeSnack={handleCloseSnack}\n              isActive={snackIsActive}\n            />\n            <SideMenu\n              isOpen={sideMenuOpen}\n              open={handleOpenSideMenu}\n              close={handleCloseSideMenu}\n              logoutUser={logoutUser}\n            />\n          </ThemeProvider>\n        </Provider>\n      </BrowserRouter>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}