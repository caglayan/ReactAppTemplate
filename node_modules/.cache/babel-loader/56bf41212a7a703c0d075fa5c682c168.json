{"ast":null,"code":"var _jsxFileName = \"/Users/caglayanserbetci/Desktop/miuul/miuul/src/Dialogs/SignupForm.js\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\n\nconst Basic = props => React.createElement(Formik, {\n  initialValues: {\n    givenName: '',\n    familyName: '',\n    email: '',\n    password: ''\n  },\n  validate: values => {\n    const errors = {};\n\n    if (!values.email) {\n      errors.email = 'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n      errors.email = 'Invalid email address';\n    }\n\n    return errors;\n  },\n  onSubmit: (values, {\n    setSubmitting\n  }) => {\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false);\n    }, 400);\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, ({\n  values,\n  errors,\n  touched,\n  handleChange,\n  handleBlur,\n  handleSubmit,\n  isSubmitting\n  /* and other goodies */\n\n}) => React.createElement(\"form\", {\n  style: {\n    width: '100%'\n  },\n  onSubmit: handleSubmit,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, React.createElement(Grid, {\n  container: true,\n  justify: \"center\",\n  item: true,\n  spacing: 6,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, React.createElement(Grid, {\n  item: true,\n  xs: 6,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, React.createElement(TextField, {\n  label: \"\\u0130sim\",\n  fullWidth: true,\n  name: \"givenName\",\n  id: \"givenName\",\n  helperText: \"\",\n  margin: \"dense\",\n  variant: \"outlined\",\n  onChange: handleChange,\n  onBlur: handleBlur,\n  value: values.givenName,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n})), React.createElement(Grid, {\n  item: true,\n  xs: 6,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}, React.createElement(TextField, {\n  label: \"Soyisim\",\n  fullWidth: true,\n  name: \"familyName\",\n  id: \"familyName\",\n  helperText: \"\",\n  margin: \"dense\",\n  variant: \"outlined\",\n  onChange: handleChange,\n  onBlur: handleBlur,\n  value: values.familyName,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}))), React.createElement(Grid, {\n  container: true,\n  justify: \"center\",\n  item: true,\n  spacing: 6,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}, React.createElement(Grid, {\n  item: true,\n  xs: 6,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}, React.createElement(TextField, {\n  error: errors.email != null,\n  label: \"Email\",\n  fullWidth: true,\n  id: \"email\",\n  helperText: errors.email && touched.email && errors.email,\n  margin: \"dense\",\n  variant: \"outlined\",\n  onChange: handleChange,\n  onBlur: handleBlur,\n  value: values.email,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n})), React.createElement(Grid, {\n  item: true,\n  xs: 6,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86\n  },\n  __self: this\n}, React.createElement(TextField, {\n  error: errors.password != null,\n  label: \"\\u015Eifre\",\n  type: \"password\",\n  fullWidth: true,\n  id: \"password\",\n  helperText: errors.password && touched.password && errors.password,\n  margin: \"dense\",\n  variant: \"outlined\",\n  onChange: handleChange,\n  onBlur: handleBlur,\n  value: values.password,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87\n  },\n  __self: this\n}))), React.createElement(Grid, {\n  item: true,\n  mt: 10,\n  xs: 12,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 103\n  },\n  __self: this\n}, React.createElement(Box, {\n  textAlign: \"center\",\n  m: 0,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 104\n  },\n  __self: this\n}, \"\\xDCye olarak gizlilik s\\xF6zle\\u015Fmemizi ve Kullan\\u0131m \\u015Eartlar\\u0131m\\u0131z\\u0131 kabul etmi\\u015F olursunuz.\")), React.createElement(Grid, {\n  item: true,\n  xs: 12,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109\n  },\n  __self: this\n}, React.createElement(Box, {\n  textAlign: \"center\",\n  m: 0,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 110\n  },\n  __self: this\n}, React.createElement(Button, {\n  style: {\n    width: \"100%\"\n  },\n  onClick: props.closeDialog,\n  variant: \"contained\",\n  color: \"secondary\",\n  type: \"submit\",\n  disabled: isSubmitting,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111\n  },\n  __self: this\n}, \"\\xDCye Ol\")))));\n\nexport default Basic;","map":{"version":3,"sources":["/Users/caglayanserbetci/Desktop/miuul/miuul/src/Dialogs/SignupForm.js"],"names":["React","Formik","TextField","Grid","Box","Button","Basic","props","givenName","familyName","email","password","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","touched","handleChange","handleBlur","handleSubmit","isSubmitting","width","closeDialog"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik } from 'formik';\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\n\nconst Basic = (props) => (  \n    <Formik\n      initialValues={{givenName:'',familyName:'',email: '', password: '' }}\n      validate={values => {\n        const errors = {};\n        if (!values.email) {\n          errors.email = 'Required';\n        } else if (\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n        ) {\n          errors.email = 'Invalid email address';\n        }\n        return errors;\n      }}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        /* and other goodies */\n      }) => (\n        <form style={{width:'100%'}} onSubmit={handleSubmit}>\n            <Grid container justify=\"center\" item spacing={6}>\n            <Grid  item xs={6}>\n            <TextField\n                label=\"İsim\"\n                fullWidth\n                name=\"givenName\"\n                id=\"givenName\"                  \n                helperText=\"\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.givenName}\n            />\n            </Grid>\n            <Grid  item xs={6}>\n            <TextField\n                label=\"Soyisim\"\n                fullWidth\n                name=\"familyName\"\n                id=\"familyName\"                  \n                helperText=\"\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.familyName}\n            />\n            </Grid>\n        </Grid>\n        <Grid container justify=\"center\" item spacing={6}>\n            <Grid item  xs={6}>\n                <TextField\n                    error = {(errors.email!=null)}\n                    label=\"Email\"\n                    fullWidth\n                    id=\"email\"                  \n                    helperText={errors.email && touched.email && errors.email}\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.email}\n                />\n            </Grid>\n            \n            <Grid item  xs={6}>\n                <TextField\n                    error={(errors.password!=null)}\n                    label=\"Şifre\"\n                    type=\"password\"\n                    fullWidth\n                    id=\"password\"                  \n                    helperText={errors.password && touched.password && errors.password}\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.password}\n                />\n            </Grid>\n            \n        </Grid>   \n        <Grid item mt={10} xs={12}>\n              <Box textAlign=\"center\" m={0}>\n                Üye olarak gizlilik sözleşmemizi ve Kullanım Şartlarımızı kabul\n                etmiş olursunuz.\n              </Box>\n            </Grid>\n            <Grid item xs={12}>\n              <Box textAlign=\"center\" m={0}>\n                <Button\n                  style={{ width: \"100%\" }}\n                  onClick={props.closeDialog}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  type=\"submit\" \n                  disabled={isSubmitting}\n                >\n                  Üye Ol\n                </Button>\n              </Box>\n            </Grid>                              \n        </form>\n      )}\n    </Formik>\n);\n\nexport default Basic;"]},"metadata":{},"sourceType":"module"}